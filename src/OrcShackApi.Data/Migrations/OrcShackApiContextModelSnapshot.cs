// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrcShackApi.Data;

#nullable disable

namespace OrcShackApi.Data.Migrations
{
    [DbContext(typeof(OrcShackApiContext))]
    partial class OrcShackApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrcShackApi.Core.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("OrcShackApi.Core.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("OrcShackApi.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccountLockedUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedLoginAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FailedLoginAttemptCount = 0,
                            Name = "Admin",
                            PasswordHash = new byte[] { 143, 113, 149, 23, 170, 124, 214, 41, 59, 41, 116, 212, 170, 81, 194, 138, 165, 56, 13, 3, 49, 63, 116, 35, 214, 152, 70, 202, 195, 179, 114, 128, 192, 235, 189, 250, 3, 196, 35, 99, 245, 119, 95, 247, 85, 227, 114, 151, 251, 21, 227, 191, 109, 191, 231, 175, 72, 81, 238, 137, 76, 101, 150, 95 },
                            PasswordSalt = new byte[] { 64, 18, 116, 146, 32, 198, 217, 165, 137, 124, 42, 120, 204, 242, 75, 131, 145, 252, 87, 252, 253, 157, 251, 239, 216, 211, 112, 235, 204, 169, 90, 249, 136, 86, 58, 204, 26, 138, 5, 187, 88, 37, 141, 107, 41, 183, 187, 127, 122, 127, 109, 54, 217, 227, 206, 189, 178, 84, 217, 121, 58, 6, 229, 183, 77, 175, 248, 40, 77, 187, 249, 5, 236, 37, 178, 155, 254, 49, 243, 214, 19, 14, 136, 105, 53, 51, 198, 25, 10, 39, 205, 163, 117, 101, 187, 229, 129, 208, 193, 254, 127, 11, 131, 67, 90, 71, 48, 227, 42, 203, 191, 153, 200, 70, 124, 246, 218, 117, 145, 173, 198, 176, 42, 118, 165, 33, 250, 162 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("OrcShackApi.Core.Models.Rating", b =>
                {
                    b.HasOne("OrcShackApi.Core.Models.Dish", "Dish")
                        .WithMany("Ratings")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrcShackApi.Core.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrcShackApi.Core.Models.Dish", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("OrcShackApi.Core.Models.User", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
